{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n// Mock data import (for demo mode)\nconst generateMockEmails = () => {\n  const getTimeAgo = (daysAgo, hoursAgo = 0) => {\n    if (daysAgo === 0 && hoursAgo < 1) return 'Just now';\n    if (daysAgo === 0) return hoursAgo + 'h ago';\n    if (daysAgo === 1) return 'Yesterday';\n    if (daysAgo < 7) return daysAgo + 'd ago';\n    return Math.floor(daysAgo / 7) + 'w ago';\n  };\n  return [\n  // Sample emails for demo - using the same data from App.js\n  {\n    id: 'demo-1',\n    type: 'caregiver',\n    state: 'unseen',\n    priority: 'critical',\n    hpa: 'Sign & Send',\n    kid: {\n      name: 'Sophie Martinez',\n      initial: 'S',\n      grade: '3rd Grade'\n    },\n    timeAgo: getTimeAgo(0, 2),\n    title: 'Field Trip Permission - Due Wednesday',\n    summary: 'Museum visit Friday requires signed form by Wed 5 PM',\n    metaCTA: 'Swipe Right: Quick Sign & Send',\n    requiresSignature: true,\n    formFields: [{\n      label: 'Student Name',\n      autoFillValue: 'Sophie Martinez'\n    }, {\n      label: 'Parent/Guardian',\n      autoFillValue: 'Parent Name'\n    }, {\n      label: 'Emergency Contact',\n      autoFillValue: '(555) 123-4567'\n    }],\n    dataSources: [{\n      subject: 'Field Trip Permission',\n      from: 'Mrs. Anderson',\n      date: getTimeAgo(0, 2)\n    }]\n  }];\n};\nclass EmailAdapter {\n  constructor() {\n    this.demoMode = true;\n    this.userEmail = null;\n    this.apiClient = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // Toggle between demo and real data\n  setDemoMode(enabled) {\n    this.demoMode = enabled;\n  }\n\n  // Set user email for real data mode\n  setUserEmail(email) {\n    this.userEmail = email;\n  }\n\n  // Get emails (demo or real)\n  async getEmails(maxResults = 50) {\n    if (this.demoMode) {\n      console.log('📧 Using demo mode - loading mock emails');\n      return this.getFullMockData();\n    }\n    if (!this.userEmail) {\n      throw new Error('User email not set for real data mode');\n    }\n    console.log(`📧 Fetching real emails for: ${this.userEmail}`);\n    try {\n      var _response$data$emails;\n      const response = await this.apiClient.get(`/api/users/${this.userEmail}/emails`, {\n        params: {\n          maxResults\n        }\n      });\n      console.log(`📧 Received ${((_response$data$emails = response.data.emails) === null || _response$data$emails === void 0 ? void 0 : _response$data$emails.length) || 0} emails from backend`);\n      return this.transformBackendEmails(response.data.emails || []);\n    } catch (error) {\n      console.error('❌ Error fetching real emails:', error.message);\n      console.log('🔄 Falling back to demo mode');\n      // Fallback to demo mode on error\n      this.demoMode = true;\n      return this.getFullMockData();\n    }\n  }\n\n  // Get full mock data (all archetypes)\n  getFullMockData() {\n    // Import the full mock data from App.js generateInitialCards\n    const getTimeAgo = (daysAgo, hoursAgo = 0) => {\n      if (daysAgo === 0 && hoursAgo < 1) return 'Just now';\n      if (daysAgo === 0) return hoursAgo + 'h ago';\n      if (daysAgo === 1) return 'Yesterday';\n      if (daysAgo < 7) return daysAgo + 'd ago';\n      return Math.floor(daysAgo / 7) + 'w ago';\n    };\n    return [\n    // P1: Transactional Leader (3 emails)\n    {\n      id: 'tl1',\n      type: 'transactional_leader',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Review & Approve',\n      sender: {\n        name: 'Finance Dept',\n        initial: 'F'\n      },\n      timeAgo: getTimeAgo(0, 1),\n      title: 'Q4 Budget Approval Required',\n      summary: 'Department budget requests need executive sign-off by EOD',\n      metaCTA: 'Swipe Right: Quick Approve',\n      dataSources: [{\n        subject: 'Budget Approval',\n        from: 'finance@company.com',\n        date: getTimeAgo(0, 1)\n      }]\n    }, {\n      id: 'tl2',\n      type: 'transactional_leader',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'Auto-Route',\n      sender: {\n        name: 'HR Systems',\n        initial: 'H'\n      },\n      timeAgo: getTimeAgo(0, 3),\n      title: 'New Hire Onboarding - Sarah Chen',\n      summary: 'Final approval needed for new Engineering Manager start date',\n      metaCTA: 'Swipe Right: Delegate to HR',\n      dataSources: [{\n        subject: 'Onboarding Approval',\n        from: 'hr@company.com',\n        date: getTimeAgo(0, 3)\n      }]\n    }, {\n      id: 'tl3',\n      type: 'transactional_leader',\n      state: 'unseen',\n      priority: 'low',\n      hpa: 'File for Reference',\n      sender: {\n        name: 'IT Updates',\n        initial: 'I'\n      },\n      timeAgo: getTimeAgo(2),\n      title: 'Monthly Security Report',\n      summary: 'Routine security metrics and system updates for your review',\n      metaCTA: 'Swipe Left: File for Reference',\n      dataSources: [{\n        subject: 'Security Report',\n        from: 'security@company.com',\n        date: getTimeAgo(2)\n      }]\n    },\n    // P2: Sales Hunter (3 emails)\n    {\n      id: 'sh1',\n      type: 'sales_hunter',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Schedule Demo',\n      company: {\n        name: 'TechCorp Industries',\n        initials: 'TC'\n      },\n      industry: 'SaaS',\n      timeAgo: getTimeAgo(0, 3),\n      score: 95,\n      value: '$85K',\n      probability: 90,\n      contact: {\n        name: 'Sarah Chen',\n        initials: 'SC',\n        role: 'VP Operations'\n      },\n      summary: 'Ready to schedule demo, budget approved, decision timeline confirmed',\n      metaCTA: 'Swipe Right: Send Demo Times',\n      dataSources: [{\n        subject: 'Ready to Move Forward',\n        from: 'sarah.chen@techcorp.com',\n        date: getTimeAgo(0, 3)\n      }]\n    }, {\n      id: 'sh2',\n      type: 'sales_hunter',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Route to CRM',\n      company: {\n        name: 'DataFlow Systems',\n        initials: 'DF'\n      },\n      industry: 'Analytics',\n      timeAgo: getTimeAgo(0, 5),\n      score: 88,\n      value: '$120K',\n      probability: 85,\n      contact: {\n        name: 'James Wilson',\n        initials: 'JW',\n        role: 'CTO'\n      },\n      summary: 'RFP due Friday - requesting proposal submission',\n      metaCTA: 'Swipe Right: Route to CRM & Tag Urgent',\n      dataSources: [{\n        subject: 'RFP Submission',\n        from: 'j.wilson@dataflow.com',\n        date: getTimeAgo(0, 5)\n      }]\n    }, {\n      id: 'sh3',\n      type: 'sales_hunter',\n      state: 'unseen',\n      priority: 'medium',\n      hpa: 'Follow Up',\n      company: {\n        name: 'StartupCo',\n        initials: 'SC'\n      },\n      industry: 'Tech',\n      timeAgo: getTimeAgo(1),\n      score: 72,\n      value: '$45K',\n      probability: 60,\n      contact: {\n        name: 'Alex Kim',\n        initials: 'AK',\n        role: 'Founder'\n      },\n      summary: 'Initial interest expressed, needs follow-up call',\n      metaCTA: 'Swipe Right: Schedule Follow-Up',\n      dataSources: [{\n        subject: 'Re: Demo Request',\n        from: 'alex@startupco.io',\n        date: getTimeAgo(1)\n      }]\n    },\n    // P3: Project Coordinator (2 emails)\n    {\n      id: 'pc1',\n      type: 'project_coordinator',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Schedule Review',\n      project: {\n        name: 'Website Redesign',\n        code: 'WR-2024'\n      },\n      client: {\n        name: 'Acme Corp',\n        initials: 'AC'\n      },\n      timeAgo: getTimeAgo(0, 2),\n      title: 'Client Milestone Review - Due Friday',\n      summary: 'Design mockups need approval before development phase begins',\n      metaCTA: 'Swipe Right: Schedule Review',\n      dataSources: [{\n        subject: 'Milestone Approval',\n        from: 'client@acme.com',\n        date: getTimeAgo(0, 2)\n      }]\n    }, {\n      id: 'pc2',\n      type: 'project_coordinator',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'File by Project',\n      project: {\n        name: 'Mobile App Launch',\n        code: 'MAL-2024'\n      },\n      client: {\n        name: 'Beta Users',\n        initials: 'B'\n      },\n      timeAgo: getTimeAgo(0, 4),\n      title: 'Beta Testing Feedback Summary',\n      summary: '47 users submitted feedback, 3 critical bugs identified',\n      metaCTA: 'Swipe Left: Tag & File by Project',\n      dataSources: [{\n        subject: 'Beta Feedback',\n        from: 'testing@company.com',\n        date: getTimeAgo(0, 4)\n      }]\n    },\n    // P4: Enterprise Innovator / Learning (2 emails)\n    {\n      id: 'ei1',\n      type: 'enterprise_innovator',\n      state: 'unseen',\n      priority: 'medium',\n      hpa: 'Save for Later',\n      source: {\n        name: 'MIT Tech Review',\n        initials: 'MT'\n      },\n      timeAgo: getTimeAgo(1),\n      title: 'AI Trends Report Q4 2024',\n      summary: 'Comprehensive analysis of emerging AI technologies and market applications',\n      metaCTA: 'Swipe Left: Save for Deep Read',\n      dataSources: [{\n        subject: 'Industry Newsletter',\n        from: 'newsletter@mittr.com',\n        date: getTimeAgo(1)\n      }]\n    }, {\n      id: 'ei2',\n      type: 'enterprise_innovator',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'Express Interest',\n      source: {\n        name: 'Innovation Labs',\n        initials: 'IL'\n      },\n      timeAgo: getTimeAgo(0, 6),\n      title: 'Partnership Opportunity - Stanford Research',\n      summary: 'Joint research proposal on next-gen ML applications',\n      metaCTA: 'Swipe Right: Express Interest',\n      dataSources: [{\n        subject: 'Partnership Inquiry',\n        from: 'labs@stanford.edu',\n        date: getTimeAgo(0, 6)\n      }]\n    },\n    // C1: Caregiver (3 emails)\n    {\n      id: 'cc1',\n      type: 'caregiver',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Sign & Send',\n      kid: {\n        name: 'Sophie Martinez',\n        initial: 'S',\n        grade: '3rd Grade'\n      },\n      timeAgo: getTimeAgo(0, 2),\n      title: 'Field Trip Permission - Due Wednesday',\n      summary: 'Museum visit Friday requires signed form by Wed 5 PM',\n      metaCTA: 'Swipe Right: Quick Sign & Send',\n      requiresSignature: true,\n      formFields: [{\n        label: 'Student Name',\n        autoFillValue: 'Sophie Martinez'\n      }, {\n        label: 'Parent/Guardian',\n        autoFillValue: 'Parent Name'\n      }, {\n        label: 'Emergency Contact',\n        autoFillValue: '(555) 123-4567'\n      }],\n      dataSources: [{\n        subject: 'Field Trip Permission',\n        from: 'Mrs. Anderson',\n        date: getTimeAgo(0, 2)\n      }]\n    }, {\n      id: 'cc2',\n      type: 'caregiver',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'Acknowledge',\n      kid: {\n        name: 'Max Rodriguez',\n        initial: 'M',\n        grade: '6th Grade'\n      },\n      timeAgo: getTimeAgo(0, 5),\n      title: 'Assignment Past Due - Math Homework',\n      summary: 'Homework from last week not submitted, submit by Friday for partial credit',\n      metaCTA: 'Swipe Right: Acknowledge & Confirm',\n      dataSources: [{\n        subject: 'Missing Assignment Alert',\n        from: 'Mr. Thompson',\n        date: getTimeAgo(0, 5)\n      }]\n    }, {\n      id: 'cc3',\n      type: 'caregiver',\n      state: 'unseen',\n      priority: 'low',\n      hpa: 'Archive',\n      kid: {\n        name: 'Sophie Martinez',\n        initial: 'S',\n        grade: '3rd Grade'\n      },\n      timeAgo: getTimeAgo(3),\n      title: 'Weekly Newsletter',\n      summary: 'School newsletter with upcoming events and general announcements',\n      metaCTA: 'Swipe Left: Archive',\n      dataSources: [{\n        subject: 'Weekly Newsletter',\n        from: 'newsletter@school.edu',\n        date: getTimeAgo(3)\n      }]\n    },\n    // C2: Deal Stacker (3 emails)\n    {\n      id: 'ds1',\n      type: 'deal_stacker',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'Claim Deal',\n      store: 'TechMart',\n      timeAgo: getTimeAgo(0, 1),\n      title: 'Flash Sale: Premium Headphones',\n      productImage: 'Headphones',\n      aiBackground: 'linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%)',\n      originalPrice: 299.99,\n      salePrice: 149.99,\n      discount: 50,\n      urgent: true,\n      expiresIn: '6 hours',\n      metaCTA: 'Swipe Right: Claim Deal Now',\n      promoCode: 'AUDIO50',\n      features: ['50% off', 'Free shipping'],\n      dataSources: [{\n        subject: 'FLASH SALE',\n        from: 'deals@techmart.com',\n        date: getTimeAgo(0, 1)\n      }]\n    }, {\n      id: 'ds2',\n      type: 'deal_stacker',\n      state: 'unseen',\n      priority: 'low',\n      hpa: 'Not Interested',\n      store: 'FashionHub',\n      timeAgo: getTimeAgo(1),\n      title: 'Extra 30% Off Fall Collection',\n      productImage: 'Apparel',\n      aiBackground: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n      originalPrice: 120.00,\n      salePrice: 59.99,\n      discount: 50,\n      urgent: false,\n      expiresIn: '3 days',\n      metaCTA: 'Swipe Left: Dismiss',\n      features: ['Stacks with sale', 'Free shipping $50+'],\n      dataSources: [{\n        subject: 'Fall Sale',\n        from: 'style@fashionhub.com',\n        date: getTimeAgo(1)\n      }]\n    }, {\n      id: 'ds3',\n      type: 'deal_stacker',\n      state: 'unseen',\n      priority: 'medium',\n      hpa: 'Compare Prices',\n      store: 'ElectroWorld',\n      timeAgo: getTimeAgo(0, 8),\n      title: 'Limited Time: 4K Monitor Deal',\n      productImage: 'Monitor',\n      aiBackground: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      originalPrice: 899.99,\n      salePrice: 549.99,\n      discount: 39,\n      urgent: false,\n      expiresIn: '2 days',\n      metaCTA: 'Swipe Right: Compare & Buy',\n      dataSources: [{\n        subject: 'Monitor Deal Alert',\n        from: 'deals@electroworld.com',\n        date: getTimeAgo(0, 8)\n      }]\n    },\n    // C3: Status Seeker (2 emails)\n    {\n      id: 'ss1',\n      type: 'status_seeker',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Check In Now',\n      airline: 'United Airlines',\n      timeAgo: getTimeAgo(0, 1),\n      title: 'Flight Check-in Available - SFO to NYC',\n      summary: 'Check in now for tomorrow\\'s 6:45 AM departure, upgrade available',\n      metaCTA: 'Swipe Right: Check In & Upgrade',\n      flightDetails: {\n        number: 'UA 1234',\n        from: 'SFO',\n        to: 'JFK',\n        date: 'Tomorrow 6:45 AM'\n      },\n      dataSources: [{\n        subject: 'Check-in Available',\n        from: 'united@airlines.com',\n        date: getTimeAgo(0, 1)\n      }]\n    }, {\n      id: 'ss2',\n      type: 'status_seeker',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'Enroll Now',\n      airline: 'Marriott Bonvoy',\n      timeAgo: getTimeAgo(0, 3),\n      title: 'Elite Status Challenge Opportunity',\n      summary: 'Fast-track to Platinum status with 10 qualifying stays',\n      metaCTA: 'Swipe Right: Enroll Now',\n      dataSources: [{\n        subject: 'Status Challenge',\n        from: 'bonvoy@marriott.com',\n        date: getTimeAgo(0, 3)\n      }]\n    },\n    // C4: Identity Manager (2 emails)\n    {\n      id: 'idm1',\n      type: 'identity_manager',\n      state: 'unseen',\n      priority: 'critical',\n      hpa: 'Verify Identity',\n      service: 'Amazon',\n      timeAgo: getTimeAgo(0, 0),\n      title: 'Password Reset Request',\n      summary: 'Someone requested a password reset for your account',\n      metaCTA: 'Swipe Right: Verify Identity',\n      security: true,\n      expiresIn: '15 minutes',\n      dataSources: [{\n        subject: 'Password Reset',\n        from: 'security@amazon.com',\n        date: getTimeAgo(0, 0)\n      }]\n    }, {\n      id: 'idm2',\n      type: 'identity_manager',\n      state: 'unseen',\n      priority: 'high',\n      hpa: 'Confirm or Deny',\n      service: 'PayPal',\n      timeAgo: getTimeAgo(0, 2),\n      title: 'New Device Login Detected',\n      summary: 'Login from iPhone in San Francisco, CA',\n      metaCTA: 'Swipe Right: Confirm or Deny',\n      security: true,\n      dataSources: [{\n        subject: 'Security Alert',\n        from: 'security@paypal.com',\n        date: getTimeAgo(0, 2)\n      }]\n    }];\n  }\n\n  // Transform backend email format to SwipeFeed format\n  transformBackendEmails(backendEmails) {\n    return backendEmails.map(email => ({\n      id: email.id,\n      type: this.mapToArchetype(email),\n      state: 'unseen',\n      priority: this.determinePriority(email),\n      hpa: this.generateHPA(email),\n      timeAgo: this.formatTimeAgo(email.internalDate),\n      title: email.subject || 'No Subject',\n      summary: email.denoisedSnippet || email.snippet || 'No preview available',\n      metaCTA: this.generateMetaCTA(email),\n      dataSources: [{\n        subject: email.subject,\n        from: email.from,\n        date: email.date\n      }],\n      // Add archetype-specific fields based on email content\n      ...this.extractArchetypeFields(email)\n    }));\n  }\n\n  // Map email to archetype (simplified - would use AI classification in production)\n  mapToArchetype(email) {\n    const subject = (email.subject || '').toLowerCase();\n    const from = (email.from || '').toLowerCase();\n    if (subject.includes('field trip') || subject.includes('school') || from.includes('school')) {\n      return 'caregiver';\n    }\n    if (subject.includes('demo') || subject.includes('sales') || from.includes('sales')) {\n      return 'sales_hunter';\n    }\n    if (subject.includes('budget') || subject.includes('approval') || from.includes('finance')) {\n      return 'transactional_leader';\n    }\n    if (subject.includes('deal') || subject.includes('sale') || from.includes('deals')) {\n      return 'deal_stacker';\n    }\n    if (subject.includes('flight') || subject.includes('check-in') || from.includes('airlines')) {\n      return 'status_seeker';\n    }\n    if (subject.includes('password') || subject.includes('security') || from.includes('security')) {\n      return 'identity_manager';\n    }\n    if (subject.includes('project') || subject.includes('milestone') || from.includes('client')) {\n      return 'project_coordinator';\n    }\n    return 'enterprise_innovator'; // Default to learning\n  }\n\n  // Determine priority based on email content\n  determinePriority(email) {\n    const subject = (email.subject || '').toLowerCase();\n    const snippet = (email.snippet || '').toLowerCase();\n    if (subject.includes('urgent') || subject.includes('asap') || subject.includes('immediate')) {\n      return 'critical';\n    }\n    if (subject.includes('important') || subject.includes('due') || snippet.includes('deadline')) {\n      return 'high';\n    }\n    if (subject.includes('fyi') || subject.includes('newsletter') || subject.includes('update')) {\n      return 'low';\n    }\n    return 'medium'; // Default\n  }\n\n  // Generate High Priority Action\n  generateHPA(email) {\n    const archetype = this.mapToArchetype(email);\n    const priority = this.determinePriority(email);\n    if (priority === 'critical') {\n      switch (archetype) {\n        case 'caregiver':\n          return 'Sign & Send';\n        case 'sales_hunter':\n          return 'Schedule Demo';\n        case 'transactional_leader':\n          return 'Review & Approve';\n        case 'identity_manager':\n          return 'Verify Identity';\n        default:\n          return 'Take Action';\n      }\n    }\n    switch (archetype) {\n      case 'caregiver':\n        return 'Acknowledge';\n      case 'sales_hunter':\n        return 'Route to CRM';\n      case 'transactional_leader':\n        return 'Auto-Route';\n      case 'deal_stacker':\n        return 'Claim Deal';\n      case 'status_seeker':\n        return 'Check In Now';\n      case 'identity_manager':\n        return 'Confirm or Deny';\n      case 'project_coordinator':\n        return 'File by Project';\n      case 'enterprise_innovator':\n        return 'Save for Later';\n      default:\n        return 'Review';\n    }\n  }\n\n  // Generate meta-CTA\n  generateMetaCTA(email) {\n    const hpa = this.generateHPA(email);\n    const archetype = this.mapToArchetype(email);\n    if (archetype === 'deal_stacker' || archetype === 'status_seeker') {\n      return `Swipe Right: ${hpa}`;\n    }\n    return `Swipe Right: ${hpa}`;\n  }\n\n  // Extract archetype-specific fields\n  extractArchetypeFields(email) {\n    const archetype = this.mapToArchetype(email);\n    const fields = {};\n\n    // Add archetype-specific data extraction logic here\n    // For now, return basic structure\n\n    return fields;\n  }\n\n  // Format timestamp\n  formatTimeAgo(internalDate) {\n    if (!internalDate) return 'Unknown';\n    const emailDate = new Date(parseInt(internalDate));\n    const now = new Date();\n    const diffMs = now - emailDate;\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n    if (diffHours < 1) return 'Just now';\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return `${Math.floor(diffDays / 7)}w ago`;\n  }\n\n  // Check if user has valid credentials\n  async checkAuthentication(userEmail) {\n    try {\n      const response = await this.apiClient.get(`/api/users/${userEmail}/status`);\n      return response.data.hasCredentials;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // Get available user accounts\n  async getAvailableAccounts() {\n    try {\n      // This would list available credential files\n      // For now, return the known accounts from your setup\n      return [{\n        email: 'hanson@rationalework',\n        displayName: 'Hanson (Work)'\n      }, {\n        email: 'thematthanson@gmail.com',\n        displayName: 'Matt (Personal)'\n      }];\n    } catch (error) {\n      return [];\n    }\n  }\n\n  // Process emails through backend pipeline\n  async processEmails(userEmail, options = {}) {\n    try {\n      const response = await this.apiClient.post(`/api/users/${userEmail}/process`, {\n        maxEmails: options.maxEmails || 50,\n        outputFormats: ['card'],\n        includeMultipleFormats: false\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error processing emails:', error);\n      throw error;\n    }\n  }\n}\nexport default new EmailAdapter();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","generateMockEmails","getTimeAgo","daysAgo","hoursAgo","Math","floor","id","type","state","priority","hpa","kid","name","initial","grade","timeAgo","title","summary","metaCTA","requiresSignature","formFields","label","autoFillValue","dataSources","subject","from","date","EmailAdapter","constructor","demoMode","userEmail","apiClient","create","baseURL","timeout","headers","setDemoMode","enabled","setUserEmail","email","getEmails","maxResults","console","log","getFullMockData","Error","_response$data$emails","response","get","params","data","emails","length","transformBackendEmails","error","message","sender","company","initials","industry","score","value","probability","contact","role","project","code","client","source","store","productImage","aiBackground","originalPrice","salePrice","discount","urgent","expiresIn","promoCode","features","airline","flightDetails","number","to","service","security","backendEmails","map","mapToArchetype","determinePriority","generateHPA","formatTimeAgo","internalDate","denoisedSnippet","snippet","generateMetaCTA","extractArchetypeFields","toLowerCase","includes","archetype","fields","emailDate","Date","parseInt","now","diffMs","diffHours","diffDays","checkAuthentication","hasCredentials","getAvailableAccounts","displayName","processEmails","options","post","maxEmails","outputFormats","includeMultipleFormats"],"sources":["/Users/matthanson/EmailShortForm_01/swipe-app/src/services/emailAdapter.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n// Mock data import (for demo mode)\nconst generateMockEmails = () => {\n  const getTimeAgo = (daysAgo, hoursAgo = 0) => {\n    if (daysAgo === 0 && hoursAgo < 1) return 'Just now';\n    if (daysAgo === 0) return hoursAgo + 'h ago';\n    if (daysAgo === 1) return 'Yesterday';\n    if (daysAgo < 7) return daysAgo + 'd ago';\n    return Math.floor(daysAgo / 7) + 'w ago';\n  };\n\n  return [\n    // Sample emails for demo - using the same data from App.js\n    { id: 'demo-1', type: 'caregiver', state: 'unseen', priority: 'critical', hpa: 'Sign & Send', kid: { name: 'Sophie Martinez', initial: 'S', grade: '3rd Grade' }, timeAgo: getTimeAgo(0, 2), title: 'Field Trip Permission - Due Wednesday', summary: 'Museum visit Friday requires signed form by Wed 5 PM', metaCTA: 'Swipe Right: Quick Sign & Send', requiresSignature: true, formFields: [{ label: 'Student Name', autoFillValue: 'Sophie Martinez' }, { label: 'Parent/Guardian', autoFillValue: 'Parent Name' }, { label: 'Emergency Contact', autoFillValue: '(555) 123-4567' }], dataSources: [{ subject: 'Field Trip Permission', from: 'Mrs. Anderson', date: getTimeAgo(0, 2) }] }\n  ];\n};\n\nclass EmailAdapter {\n  constructor() {\n    this.demoMode = true;\n    this.userEmail = null;\n    this.apiClient = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  }\n\n  // Toggle between demo and real data\n  setDemoMode(enabled) {\n    this.demoMode = enabled;\n  }\n\n  // Set user email for real data mode\n  setUserEmail(email) {\n    this.userEmail = email;\n  }\n\n  // Get emails (demo or real)\n  async getEmails(maxResults = 50) {\n    if (this.demoMode) {\n      console.log('📧 Using demo mode - loading mock emails');\n      return this.getFullMockData();\n    }\n\n    if (!this.userEmail) {\n      throw new Error('User email not set for real data mode');\n    }\n\n    console.log(`📧 Fetching real emails for: ${this.userEmail}`);\n\n    try {\n      const response = await this.apiClient.get(`/api/users/${this.userEmail}/emails`, {\n        params: { maxResults }\n      });\n      \n      console.log(`📧 Received ${response.data.emails?.length || 0} emails from backend`);\n      return this.transformBackendEmails(response.data.emails || []);\n    } catch (error) {\n      console.error('❌ Error fetching real emails:', error.message);\n      console.log('🔄 Falling back to demo mode');\n      // Fallback to demo mode on error\n      this.demoMode = true;\n      return this.getFullMockData();\n    }\n  }\n\n  // Get full mock data (all archetypes)\n  getFullMockData() {\n    // Import the full mock data from App.js generateInitialCards\n    const getTimeAgo = (daysAgo, hoursAgo = 0) => {\n      if (daysAgo === 0 && hoursAgo < 1) return 'Just now';\n      if (daysAgo === 0) return hoursAgo + 'h ago';\n      if (daysAgo === 1) return 'Yesterday';\n      if (daysAgo < 7) return daysAgo + 'd ago';\n      return Math.floor(daysAgo / 7) + 'w ago';\n    };\n\n    return [\n      // P1: Transactional Leader (3 emails)\n      { id: 'tl1', type: 'transactional_leader', state: 'unseen', priority: 'critical', hpa: 'Review & Approve', sender: { name: 'Finance Dept', initial: 'F' }, timeAgo: getTimeAgo(0, 1), title: 'Q4 Budget Approval Required', summary: 'Department budget requests need executive sign-off by EOD', metaCTA: 'Swipe Right: Quick Approve', dataSources: [{ subject: 'Budget Approval', from: 'finance@company.com', date: getTimeAgo(0, 1) }] },\n      { id: 'tl2', type: 'transactional_leader', state: 'unseen', priority: 'high', hpa: 'Auto-Route', sender: { name: 'HR Systems', initial: 'H' }, timeAgo: getTimeAgo(0, 3), title: 'New Hire Onboarding - Sarah Chen', summary: 'Final approval needed for new Engineering Manager start date', metaCTA: 'Swipe Right: Delegate to HR', dataSources: [{ subject: 'Onboarding Approval', from: 'hr@company.com', date: getTimeAgo(0, 3) }] },\n      { id: 'tl3', type: 'transactional_leader', state: 'unseen', priority: 'low', hpa: 'File for Reference', sender: { name: 'IT Updates', initial: 'I' }, timeAgo: getTimeAgo(2), title: 'Monthly Security Report', summary: 'Routine security metrics and system updates for your review', metaCTA: 'Swipe Left: File for Reference', dataSources: [{ subject: 'Security Report', from: 'security@company.com', date: getTimeAgo(2) }] },\n\n      // P2: Sales Hunter (3 emails)\n      { id: 'sh1', type: 'sales_hunter', state: 'unseen', priority: 'critical', hpa: 'Schedule Demo', company: { name: 'TechCorp Industries', initials: 'TC' }, industry: 'SaaS', timeAgo: getTimeAgo(0, 3), score: 95, value: '$85K', probability: 90, contact: { name: 'Sarah Chen', initials: 'SC', role: 'VP Operations' }, summary: 'Ready to schedule demo, budget approved, decision timeline confirmed', metaCTA: 'Swipe Right: Send Demo Times', dataSources: [{ subject: 'Ready to Move Forward', from: 'sarah.chen@techcorp.com', date: getTimeAgo(0, 3) }] },\n      { id: 'sh2', type: 'sales_hunter', state: 'unseen', priority: 'critical', hpa: 'Route to CRM', company: { name: 'DataFlow Systems', initials: 'DF' }, industry: 'Analytics', timeAgo: getTimeAgo(0, 5), score: 88, value: '$120K', probability: 85, contact: { name: 'James Wilson', initials: 'JW', role: 'CTO' }, summary: 'RFP due Friday - requesting proposal submission', metaCTA: 'Swipe Right: Route to CRM & Tag Urgent', dataSources: [{ subject: 'RFP Submission', from: 'j.wilson@dataflow.com', date: getTimeAgo(0, 5) }] },\n      { id: 'sh3', type: 'sales_hunter', state: 'unseen', priority: 'medium', hpa: 'Follow Up', company: { name: 'StartupCo', initials: 'SC' }, industry: 'Tech', timeAgo: getTimeAgo(1), score: 72, value: '$45K', probability: 60, contact: { name: 'Alex Kim', initials: 'AK', role: 'Founder' }, summary: 'Initial interest expressed, needs follow-up call', metaCTA: 'Swipe Right: Schedule Follow-Up', dataSources: [{ subject: 'Re: Demo Request', from: 'alex@startupco.io', date: getTimeAgo(1) }] },\n\n      // P3: Project Coordinator (2 emails)\n      { id: 'pc1', type: 'project_coordinator', state: 'unseen', priority: 'critical', hpa: 'Schedule Review', project: { name: 'Website Redesign', code: 'WR-2024' }, client: { name: 'Acme Corp', initials: 'AC' }, timeAgo: getTimeAgo(0, 2), title: 'Client Milestone Review - Due Friday', summary: 'Design mockups need approval before development phase begins', metaCTA: 'Swipe Right: Schedule Review', dataSources: [{ subject: 'Milestone Approval', from: 'client@acme.com', date: getTimeAgo(0, 2) }] },\n      { id: 'pc2', type: 'project_coordinator', state: 'unseen', priority: 'high', hpa: 'File by Project', project: { name: 'Mobile App Launch', code: 'MAL-2024' }, client: { name: 'Beta Users', initials: 'B' }, timeAgo: getTimeAgo(0, 4), title: 'Beta Testing Feedback Summary', summary: '47 users submitted feedback, 3 critical bugs identified', metaCTA: 'Swipe Left: Tag & File by Project', dataSources: [{ subject: 'Beta Feedback', from: 'testing@company.com', date: getTimeAgo(0, 4) }] },\n\n      // P4: Enterprise Innovator / Learning (2 emails)\n      { id: 'ei1', type: 'enterprise_innovator', state: 'unseen', priority: 'medium', hpa: 'Save for Later', source: { name: 'MIT Tech Review', initials: 'MT' }, timeAgo: getTimeAgo(1), title: 'AI Trends Report Q4 2024', summary: 'Comprehensive analysis of emerging AI technologies and market applications', metaCTA: 'Swipe Left: Save for Deep Read', dataSources: [{ subject: 'Industry Newsletter', from: 'newsletter@mittr.com', date: getTimeAgo(1) }] },\n      { id: 'ei2', type: 'enterprise_innovator', state: 'unseen', priority: 'high', hpa: 'Express Interest', source: { name: 'Innovation Labs', initials: 'IL' }, timeAgo: getTimeAgo(0, 6), title: 'Partnership Opportunity - Stanford Research', summary: 'Joint research proposal on next-gen ML applications', metaCTA: 'Swipe Right: Express Interest', dataSources: [{ subject: 'Partnership Inquiry', from: 'labs@stanford.edu', date: getTimeAgo(0, 6) }] },\n\n      // C1: Caregiver (3 emails)\n      { id: 'cc1', type: 'caregiver', state: 'unseen', priority: 'critical', hpa: 'Sign & Send', kid: { name: 'Sophie Martinez', initial: 'S', grade: '3rd Grade' }, timeAgo: getTimeAgo(0, 2), title: 'Field Trip Permission - Due Wednesday', summary: 'Museum visit Friday requires signed form by Wed 5 PM', metaCTA: 'Swipe Right: Quick Sign & Send', requiresSignature: true, formFields: [{ label: 'Student Name', autoFillValue: 'Sophie Martinez' }, { label: 'Parent/Guardian', autoFillValue: 'Parent Name' }, { label: 'Emergency Contact', autoFillValue: '(555) 123-4567' }], dataSources: [{ subject: 'Field Trip Permission', from: 'Mrs. Anderson', date: getTimeAgo(0, 2) }] },\n      { id: 'cc2', type: 'caregiver', state: 'unseen', priority: 'high', hpa: 'Acknowledge', kid: { name: 'Max Rodriguez', initial: 'M', grade: '6th Grade' }, timeAgo: getTimeAgo(0, 5), title: 'Assignment Past Due - Math Homework', summary: 'Homework from last week not submitted, submit by Friday for partial credit', metaCTA: 'Swipe Right: Acknowledge & Confirm', dataSources: [{ subject: 'Missing Assignment Alert', from: 'Mr. Thompson', date: getTimeAgo(0, 5) }] },\n      { id: 'cc3', type: 'caregiver', state: 'unseen', priority: 'low', hpa: 'Archive', kid: { name: 'Sophie Martinez', initial: 'S', grade: '3rd Grade' }, timeAgo: getTimeAgo(3), title: 'Weekly Newsletter', summary: 'School newsletter with upcoming events and general announcements', metaCTA: 'Swipe Left: Archive', dataSources: [{ subject: 'Weekly Newsletter', from: 'newsletter@school.edu', date: getTimeAgo(3) }] },\n\n      // C2: Deal Stacker (3 emails)\n      { id: 'ds1', type: 'deal_stacker', state: 'unseen', priority: 'high', hpa: 'Claim Deal', store: 'TechMart', timeAgo: getTimeAgo(0, 1), title: 'Flash Sale: Premium Headphones', productImage: 'Headphones', aiBackground: 'linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%)', originalPrice: 299.99, salePrice: 149.99, discount: 50, urgent: true, expiresIn: '6 hours', metaCTA: 'Swipe Right: Claim Deal Now', promoCode: 'AUDIO50', features: ['50% off', 'Free shipping'], dataSources: [{ subject: 'FLASH SALE', from: 'deals@techmart.com', date: getTimeAgo(0, 1) }] },\n      { id: 'ds2', type: 'deal_stacker', state: 'unseen', priority: 'low', hpa: 'Not Interested', store: 'FashionHub', timeAgo: getTimeAgo(1), title: 'Extra 30% Off Fall Collection', productImage: 'Apparel', aiBackground: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)', originalPrice: 120.00, salePrice: 59.99, discount: 50, urgent: false, expiresIn: '3 days', metaCTA: 'Swipe Left: Dismiss', features: ['Stacks with sale', 'Free shipping $50+'], dataSources: [{ subject: 'Fall Sale', from: 'style@fashionhub.com', date: getTimeAgo(1) }] },\n      { id: 'ds3', type: 'deal_stacker', state: 'unseen', priority: 'medium', hpa: 'Compare Prices', store: 'ElectroWorld', timeAgo: getTimeAgo(0, 8), title: 'Limited Time: 4K Monitor Deal', productImage: 'Monitor', aiBackground: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', originalPrice: 899.99, salePrice: 549.99, discount: 39, urgent: false, expiresIn: '2 days', metaCTA: 'Swipe Right: Compare & Buy', dataSources: [{ subject: 'Monitor Deal Alert', from: 'deals@electroworld.com', date: getTimeAgo(0, 8) }] },\n\n      // C3: Status Seeker (2 emails)\n      { id: 'ss1', type: 'status_seeker', state: 'unseen', priority: 'critical', hpa: 'Check In Now', airline: 'United Airlines', timeAgo: getTimeAgo(0, 1), title: 'Flight Check-in Available - SFO to NYC', summary: 'Check in now for tomorrow\\'s 6:45 AM departure, upgrade available', metaCTA: 'Swipe Right: Check In & Upgrade', flightDetails: { number: 'UA 1234', from: 'SFO', to: 'JFK', date: 'Tomorrow 6:45 AM' }, dataSources: [{ subject: 'Check-in Available', from: 'united@airlines.com', date: getTimeAgo(0, 1) }] },\n      { id: 'ss2', type: 'status_seeker', state: 'unseen', priority: 'high', hpa: 'Enroll Now', airline: 'Marriott Bonvoy', timeAgo: getTimeAgo(0, 3), title: 'Elite Status Challenge Opportunity', summary: 'Fast-track to Platinum status with 10 qualifying stays', metaCTA: 'Swipe Right: Enroll Now', dataSources: [{ subject: 'Status Challenge', from: 'bonvoy@marriott.com', date: getTimeAgo(0, 3) }] },\n\n      // C4: Identity Manager (2 emails)\n      { id: 'idm1', type: 'identity_manager', state: 'unseen', priority: 'critical', hpa: 'Verify Identity', service: 'Amazon', timeAgo: getTimeAgo(0, 0), title: 'Password Reset Request', summary: 'Someone requested a password reset for your account', metaCTA: 'Swipe Right: Verify Identity', security: true, expiresIn: '15 minutes', dataSources: [{ subject: 'Password Reset', from: 'security@amazon.com', date: getTimeAgo(0, 0) }] },\n      { id: 'idm2', type: 'identity_manager', state: 'unseen', priority: 'high', hpa: 'Confirm or Deny', service: 'PayPal', timeAgo: getTimeAgo(0, 2), title: 'New Device Login Detected', summary: 'Login from iPhone in San Francisco, CA', metaCTA: 'Swipe Right: Confirm or Deny', security: true, dataSources: [{ subject: 'Security Alert', from: 'security@paypal.com', date: getTimeAgo(0, 2) }] }\n    ];\n  }\n\n  // Transform backend email format to SwipeFeed format\n  transformBackendEmails(backendEmails) {\n    return backendEmails.map(email => ({\n      id: email.id,\n      type: this.mapToArchetype(email),\n      state: 'unseen',\n      priority: this.determinePriority(email),\n      hpa: this.generateHPA(email),\n      timeAgo: this.formatTimeAgo(email.internalDate),\n      title: email.subject || 'No Subject',\n      summary: email.denoisedSnippet || email.snippet || 'No preview available',\n      metaCTA: this.generateMetaCTA(email),\n      dataSources: [{\n        subject: email.subject,\n        from: email.from,\n        date: email.date\n      }],\n      // Add archetype-specific fields based on email content\n      ...this.extractArchetypeFields(email)\n    }));\n  }\n\n  // Map email to archetype (simplified - would use AI classification in production)\n  mapToArchetype(email) {\n    const subject = (email.subject || '').toLowerCase();\n    const from = (email.from || '').toLowerCase();\n    \n    if (subject.includes('field trip') || subject.includes('school') || from.includes('school')) {\n      return 'caregiver';\n    }\n    if (subject.includes('demo') || subject.includes('sales') || from.includes('sales')) {\n      return 'sales_hunter';\n    }\n    if (subject.includes('budget') || subject.includes('approval') || from.includes('finance')) {\n      return 'transactional_leader';\n    }\n    if (subject.includes('deal') || subject.includes('sale') || from.includes('deals')) {\n      return 'deal_stacker';\n    }\n    if (subject.includes('flight') || subject.includes('check-in') || from.includes('airlines')) {\n      return 'status_seeker';\n    }\n    if (subject.includes('password') || subject.includes('security') || from.includes('security')) {\n      return 'identity_manager';\n    }\n    if (subject.includes('project') || subject.includes('milestone') || from.includes('client')) {\n      return 'project_coordinator';\n    }\n    \n    return 'enterprise_innovator'; // Default to learning\n  }\n\n  // Determine priority based on email content\n  determinePriority(email) {\n    const subject = (email.subject || '').toLowerCase();\n    const snippet = (email.snippet || '').toLowerCase();\n    \n    if (subject.includes('urgent') || subject.includes('asap') || subject.includes('immediate')) {\n      return 'critical';\n    }\n    if (subject.includes('important') || subject.includes('due') || snippet.includes('deadline')) {\n      return 'high';\n    }\n    if (subject.includes('fyi') || subject.includes('newsletter') || subject.includes('update')) {\n      return 'low';\n    }\n    \n    return 'medium'; // Default\n  }\n\n  // Generate High Priority Action\n  generateHPA(email) {\n    const archetype = this.mapToArchetype(email);\n    const priority = this.determinePriority(email);\n    \n    if (priority === 'critical') {\n      switch (archetype) {\n        case 'caregiver': return 'Sign & Send';\n        case 'sales_hunter': return 'Schedule Demo';\n        case 'transactional_leader': return 'Review & Approve';\n        case 'identity_manager': return 'Verify Identity';\n        default: return 'Take Action';\n      }\n    }\n    \n    switch (archetype) {\n      case 'caregiver': return 'Acknowledge';\n      case 'sales_hunter': return 'Route to CRM';\n      case 'transactional_leader': return 'Auto-Route';\n      case 'deal_stacker': return 'Claim Deal';\n      case 'status_seeker': return 'Check In Now';\n      case 'identity_manager': return 'Confirm or Deny';\n      case 'project_coordinator': return 'File by Project';\n      case 'enterprise_innovator': return 'Save for Later';\n      default: return 'Review';\n    }\n  }\n\n  // Generate meta-CTA\n  generateMetaCTA(email) {\n    const hpa = this.generateHPA(email);\n    const archetype = this.mapToArchetype(email);\n    \n    if (archetype === 'deal_stacker' || archetype === 'status_seeker') {\n      return `Swipe Right: ${hpa}`;\n    }\n    \n    return `Swipe Right: ${hpa}`;\n  }\n\n  // Extract archetype-specific fields\n  extractArchetypeFields(email) {\n    const archetype = this.mapToArchetype(email);\n    const fields = {};\n    \n    // Add archetype-specific data extraction logic here\n    // For now, return basic structure\n    \n    return fields;\n  }\n\n  // Format timestamp\n  formatTimeAgo(internalDate) {\n    if (!internalDate) return 'Unknown';\n    \n    const emailDate = new Date(parseInt(internalDate));\n    const now = new Date();\n    const diffMs = now - emailDate;\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n    \n    if (diffHours < 1) return 'Just now';\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return `${Math.floor(diffDays / 7)}w ago`;\n  }\n\n  // Check if user has valid credentials\n  async checkAuthentication(userEmail) {\n    try {\n      const response = await this.apiClient.get(`/api/users/${userEmail}/status`);\n      return response.data.hasCredentials;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // Get available user accounts\n  async getAvailableAccounts() {\n    try {\n      // This would list available credential files\n      // For now, return the known accounts from your setup\n      return [\n        { email: 'hanson@rationalework', displayName: 'Hanson (Work)' },\n        { email: 'thematthanson@gmail.com', displayName: 'Matt (Personal)' }\n      ];\n    } catch (error) {\n      return [];\n    }\n  }\n\n  // Process emails through backend pipeline\n  async processEmails(userEmail, options = {}) {\n    try {\n      const response = await this.apiClient.post(`/api/users/${userEmail}/process`, {\n        maxEmails: options.maxEmails || 50,\n        outputFormats: ['card'],\n        includeMultipleFormats: false\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Error processing emails:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new EmailAdapter();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,UAAU,GAAGA,CAACC,OAAO,EAAEC,QAAQ,GAAG,CAAC,KAAK;IAC5C,IAAID,OAAO,KAAK,CAAC,IAAIC,QAAQ,GAAG,CAAC,EAAE,OAAO,UAAU;IACpD,IAAID,OAAO,KAAK,CAAC,EAAE,OAAOC,QAAQ,GAAG,OAAO;IAC5C,IAAID,OAAO,KAAK,CAAC,EAAE,OAAO,WAAW;IACrC,IAAIA,OAAO,GAAG,CAAC,EAAE,OAAOA,OAAO,GAAG,OAAO;IACzC,OAAOE,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,CAAC,CAAC,GAAG,OAAO;EAC1C,CAAC;EAED,OAAO;EACL;EACA;IAAEI,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,QAAQ;IAAEC,QAAQ,EAAE,UAAU;IAAEC,GAAG,EAAE,aAAa;IAAEC,GAAG,EAAE;MAAEC,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC;IAAEC,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEe,KAAK,EAAE,uCAAuC;IAAEC,OAAO,EAAE,sDAAsD;IAAEC,OAAO,EAAE,gCAAgC;IAAEC,iBAAiB,EAAE,IAAI;IAAEC,UAAU,EAAE,CAAC;MAAEC,KAAK,EAAE,cAAc;MAAEC,aAAa,EAAE;IAAkB,CAAC,EAAE;MAAED,KAAK,EAAE,iBAAiB;MAAEC,aAAa,EAAE;IAAc,CAAC,EAAE;MAAED,KAAK,EAAE,mBAAmB;MAAEC,aAAa,EAAE;IAAiB,CAAC,CAAC;IAAEC,WAAW,EAAE,CAAC;MAAEC,OAAO,EAAE,uBAAuB;MAAEC,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;IAAE,CAAC;EAAE,CAAC,CAC/pB;AACH,CAAC;AAED,MAAM0B,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAGpC,KAAK,CAACqC,MAAM,CAAC;MAC5BC,OAAO,EAAErC,YAAY;MACrBsC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACR,QAAQ,GAAGQ,OAAO;EACzB;;EAEA;EACAC,YAAYA,CAACC,KAAK,EAAE;IAClB,IAAI,CAACT,SAAS,GAAGS,KAAK;EACxB;;EAEA;EACA,MAAMC,SAASA,CAACC,UAAU,GAAG,EAAE,EAAE;IAC/B,IAAI,IAAI,CAACZ,QAAQ,EAAE;MACjBa,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvD,OAAO,IAAI,CAACC,eAAe,CAAC,CAAC;IAC/B;IAEA,IAAI,CAAC,IAAI,CAACd,SAAS,EAAE;MACnB,MAAM,IAAIe,KAAK,CAAC,uCAAuC,CAAC;IAC1D;IAEAH,OAAO,CAACC,GAAG,CAAC,gCAAgC,IAAI,CAACb,SAAS,EAAE,CAAC;IAE7D,IAAI;MAAA,IAAAgB,qBAAA;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAAC,cAAc,IAAI,CAAClB,SAAS,SAAS,EAAE;QAC/EmB,MAAM,EAAE;UAAER;QAAW;MACvB,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAAG,qBAAA,GAAAC,QAAQ,CAACG,IAAI,CAACC,MAAM,cAAAL,qBAAA,uBAApBA,qBAAA,CAAsBM,MAAM,KAAI,CAAC,sBAAsB,CAAC;MACnF,OAAO,IAAI,CAACC,sBAAsB,CAACN,QAAQ,CAACG,IAAI,CAACC,MAAM,IAAI,EAAE,CAAC;IAChE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC7Db,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA,IAAI,CAACd,QAAQ,GAAG,IAAI;MACpB,OAAO,IAAI,CAACe,eAAe,CAAC,CAAC;IAC/B;EACF;;EAEA;EACAA,eAAeA,CAAA,EAAG;IAChB;IACA,MAAM3C,UAAU,GAAGA,CAACC,OAAO,EAAEC,QAAQ,GAAG,CAAC,KAAK;MAC5C,IAAID,OAAO,KAAK,CAAC,IAAIC,QAAQ,GAAG,CAAC,EAAE,OAAO,UAAU;MACpD,IAAID,OAAO,KAAK,CAAC,EAAE,OAAOC,QAAQ,GAAG,OAAO;MAC5C,IAAID,OAAO,KAAK,CAAC,EAAE,OAAO,WAAW;MACrC,IAAIA,OAAO,GAAG,CAAC,EAAE,OAAOA,OAAO,GAAG,OAAO;MACzC,OAAOE,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,CAAC,CAAC,GAAG,OAAO;IAC1C,CAAC;IAED,OAAO;IACL;IACA;MAAEI,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,kBAAkB;MAAE8C,MAAM,EAAE;QAAE5C,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAI,CAAC;MAAEE,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,6BAA6B;MAAEC,OAAO,EAAE,2DAA2D;MAAEC,OAAO,EAAE,4BAA4B;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,iBAAiB;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EAC7a;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,YAAY;MAAE8C,MAAM,EAAE;QAAE5C,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAI,CAAC;MAAEE,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,kCAAkC;MAAEC,OAAO,EAAE,8DAA8D;MAAEC,OAAO,EAAE,6BAA6B;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,qBAAqB;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EACza;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,KAAK;MAAEC,GAAG,EAAE,oBAAoB;MAAE8C,MAAM,EAAE;QAAE5C,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAI,CAAC;MAAEE,OAAO,EAAEd,UAAU,CAAC,CAAC,CAAC;MAAEe,KAAK,EAAE,yBAAyB;MAAEC,OAAO,EAAE,6DAA6D;MAAEC,OAAO,EAAE,gCAAgC;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,iBAAiB;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC;MAAE,CAAC;IAAE,CAAC;IAEra;IACA;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,eAAe;MAAE+C,OAAO,EAAE;QAAE7C,IAAI,EAAE,qBAAqB;QAAE8C,QAAQ,EAAE;MAAK,CAAC;MAAEC,QAAQ,EAAE,MAAM;MAAE5C,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE2D,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,WAAW,EAAE,EAAE;MAAEC,OAAO,EAAE;QAAEnD,IAAI,EAAE,YAAY;QAAE8C,QAAQ,EAAE,IAAI;QAAEM,IAAI,EAAE;MAAgB,CAAC;MAAE/C,OAAO,EAAE,sEAAsE;MAAEC,OAAO,EAAE,8BAA8B;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,IAAI,EAAE,yBAAyB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EACliB;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,cAAc;MAAE+C,OAAO,EAAE;QAAE7C,IAAI,EAAE,kBAAkB;QAAE8C,QAAQ,EAAE;MAAK,CAAC;MAAEC,QAAQ,EAAE,WAAW;MAAE5C,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE2D,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,WAAW,EAAE,EAAE;MAAEC,OAAO,EAAE;QAAEnD,IAAI,EAAE,cAAc;QAAE8C,QAAQ,EAAE,IAAI;QAAEM,IAAI,EAAE;MAAM,CAAC;MAAE/C,OAAO,EAAE,iDAAiD;MAAEC,OAAO,EAAE,wCAAwC;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,gBAAgB;QAAEC,IAAI,EAAE,uBAAuB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EACxgB;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,GAAG,EAAE,WAAW;MAAE+C,OAAO,EAAE;QAAE7C,IAAI,EAAE,WAAW;QAAE8C,QAAQ,EAAE;MAAK,CAAC;MAAEC,QAAQ,EAAE,MAAM;MAAE5C,OAAO,EAAEd,UAAU,CAAC,CAAC,CAAC;MAAE2D,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,WAAW,EAAE,EAAE;MAAEC,OAAO,EAAE;QAAEnD,IAAI,EAAE,UAAU;QAAE8C,QAAQ,EAAE,IAAI;QAAEM,IAAI,EAAE;MAAU,CAAC;MAAE/C,OAAO,EAAE,kDAAkD;MAAEC,OAAO,EAAE,iCAAiC;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC;MAAE,CAAC;IAAE,CAAC;IAExe;IACA;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,iBAAiB;MAAEuD,OAAO,EAAE;QAAErD,IAAI,EAAE,kBAAkB;QAAEsD,IAAI,EAAE;MAAU,CAAC;MAAEC,MAAM,EAAE;QAAEvD,IAAI,EAAE,WAAW;QAAE8C,QAAQ,EAAE;MAAK,CAAC;MAAE3C,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,sCAAsC;MAAEC,OAAO,EAAE,8DAA8D;MAAEC,OAAO,EAAE,8BAA8B;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,IAAI,EAAE,iBAAiB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EAC/e;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,iBAAiB;MAAEuD,OAAO,EAAE;QAAErD,IAAI,EAAE,mBAAmB;QAAEsD,IAAI,EAAE;MAAW,CAAC;MAAEC,MAAM,EAAE;QAAEvD,IAAI,EAAE,YAAY;QAAE8C,QAAQ,EAAE;MAAI,CAAC;MAAE3C,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,+BAA+B;MAAEC,OAAO,EAAE,yDAAyD;MAAEC,OAAO,EAAE,mCAAmC;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,eAAe;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC;IAEre;IACA;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,GAAG,EAAE,gBAAgB;MAAE0D,MAAM,EAAE;QAAExD,IAAI,EAAE,iBAAiB;QAAE8C,QAAQ,EAAE;MAAK,CAAC;MAAE3C,OAAO,EAAEd,UAAU,CAAC,CAAC,CAAC;MAAEe,KAAK,EAAE,0BAA0B;MAAEC,OAAO,EAAE,4EAA4E;MAAEC,OAAO,EAAE,gCAAgC;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,qBAAqB;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC;MAAE,CAAC;IAAE,CAAC,EAC/b;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,kBAAkB;MAAE0D,MAAM,EAAE;QAAExD,IAAI,EAAE,iBAAiB;QAAE8C,QAAQ,EAAE;MAAK,CAAC;MAAE3C,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,6CAA6C;MAAEC,OAAO,EAAE,qDAAqD;MAAEC,OAAO,EAAE,+BAA+B;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,qBAAqB;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC;IAE7b;IACA;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,aAAa;MAAEC,GAAG,EAAE;QAAEC,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAY,CAAC;MAAEC,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,uCAAuC;MAAEC,OAAO,EAAE,sDAAsD;MAAEC,OAAO,EAAE,gCAAgC;MAAEC,iBAAiB,EAAE,IAAI;MAAEC,UAAU,EAAE,CAAC;QAAEC,KAAK,EAAE,cAAc;QAAEC,aAAa,EAAE;MAAkB,CAAC,EAAE;QAAED,KAAK,EAAE,iBAAiB;QAAEC,aAAa,EAAE;MAAc,CAAC,EAAE;QAAED,KAAK,EAAE,mBAAmB;QAAEC,aAAa,EAAE;MAAiB,CAAC,CAAC;MAAEC,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EAC3pB;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,aAAa;MAAEC,GAAG,EAAE;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAY,CAAC;MAAEC,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,qCAAqC;MAAEC,OAAO,EAAE,4EAA4E;MAAEC,OAAO,EAAE,oCAAoC;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,0BAA0B;QAAEC,IAAI,EAAE,cAAc;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EAC9c;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,KAAK;MAAEC,GAAG,EAAE,SAAS;MAAEC,GAAG,EAAE;QAAEC,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAY,CAAC;MAAEC,OAAO,EAAEd,UAAU,CAAC,CAAC,CAAC;MAAEe,KAAK,EAAE,mBAAmB;MAAEC,OAAO,EAAE,kEAAkE;MAAEC,OAAO,EAAE,qBAAqB;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,mBAAmB;QAAEC,IAAI,EAAE,uBAAuB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC;MAAE,CAAC;IAAE,CAAC;IAE5Z;IACA;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,YAAY;MAAE2D,KAAK,EAAE,UAAU;MAAEtD,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,gCAAgC;MAAEsD,YAAY,EAAE,YAAY;MAAEC,YAAY,EAAE,gEAAgE;MAAEC,aAAa,EAAE,MAAM;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE,IAAI;MAAEC,SAAS,EAAE,SAAS;MAAE1D,OAAO,EAAE,6BAA6B;MAAE2D,SAAS,EAAE,SAAS;MAAEC,QAAQ,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;MAAEvD,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,YAAY;QAAEC,IAAI,EAAE,oBAAoB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EAC5jB;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,KAAK;MAAEC,GAAG,EAAE,gBAAgB;MAAE2D,KAAK,EAAE,YAAY;MAAEtD,OAAO,EAAEd,UAAU,CAAC,CAAC,CAAC;MAAEe,KAAK,EAAE,+BAA+B;MAAEsD,YAAY,EAAE,SAAS;MAAEC,YAAY,EAAE,mDAAmD;MAAEC,aAAa,EAAE,MAAM;MAAEC,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE,QAAQ;MAAE1D,OAAO,EAAE,qBAAqB;MAAE4D,QAAQ,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;MAAEvD,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,WAAW;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC;MAAE,CAAC;IAAE,CAAC,EAC1hB;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,GAAG,EAAE,gBAAgB;MAAE2D,KAAK,EAAE,cAAc;MAAEtD,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,+BAA+B;MAAEsD,YAAY,EAAE,SAAS;MAAEC,YAAY,EAAE,mDAAmD;MAAEC,aAAa,EAAE,MAAM;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE,QAAQ;MAAE1D,OAAO,EAAE,4BAA4B;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,IAAI,EAAE,wBAAwB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC;IAElgB;IACA;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,eAAe;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,cAAc;MAAEqE,OAAO,EAAE,iBAAiB;MAAEhE,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,wCAAwC;MAAEC,OAAO,EAAE,mEAAmE;MAAEC,OAAO,EAAE,iCAAiC;MAAE8D,aAAa,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAExD,IAAI,EAAE,KAAK;QAAEyD,EAAE,EAAE,KAAK;QAAExD,IAAI,EAAE;MAAmB,CAAC;MAAEH,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EACjgB;MAAEK,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,eAAe;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,YAAY;MAAEqE,OAAO,EAAE,iBAAiB;MAAEhE,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,oCAAoC;MAAEC,OAAO,EAAE,wDAAwD;MAAEC,OAAO,EAAE,yBAAyB;MAAEK,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC;IAE1Y;IACA;MAAEK,EAAE,EAAE,MAAM;MAAEC,IAAI,EAAE,kBAAkB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,iBAAiB;MAAEyE,OAAO,EAAE,QAAQ;MAAEpE,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,wBAAwB;MAAEC,OAAO,EAAE,qDAAqD;MAAEC,OAAO,EAAE,8BAA8B;MAAEkE,QAAQ,EAAE,IAAI;MAAER,SAAS,EAAE,YAAY;MAAErD,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,gBAAgB;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,EAC3a;MAAEK,EAAE,EAAE,MAAM;MAAEC,IAAI,EAAE,kBAAkB;MAAEC,KAAK,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,iBAAiB;MAAEyE,OAAO,EAAE,QAAQ;MAAEpE,OAAO,EAAEd,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEe,KAAK,EAAE,2BAA2B;MAAEC,OAAO,EAAE,wCAAwC;MAAEC,OAAO,EAAE,8BAA8B;MAAEkE,QAAQ,EAAE,IAAI;MAAE7D,WAAW,EAAE,CAAC;QAAEC,OAAO,EAAE,gBAAgB;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,IAAI,EAAEzB,UAAU,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC;IAAE,CAAC,CACrY;EACH;;EAEA;EACAoD,sBAAsBA,CAACgC,aAAa,EAAE;IACpC,OAAOA,aAAa,CAACC,GAAG,CAAC/C,KAAK,KAAK;MACjCjC,EAAE,EAAEiC,KAAK,CAACjC,EAAE;MACZC,IAAI,EAAE,IAAI,CAACgF,cAAc,CAAChD,KAAK,CAAC;MAChC/B,KAAK,EAAE,QAAQ;MACfC,QAAQ,EAAE,IAAI,CAAC+E,iBAAiB,CAACjD,KAAK,CAAC;MACvC7B,GAAG,EAAE,IAAI,CAAC+E,WAAW,CAAClD,KAAK,CAAC;MAC5BxB,OAAO,EAAE,IAAI,CAAC2E,aAAa,CAACnD,KAAK,CAACoD,YAAY,CAAC;MAC/C3E,KAAK,EAAEuB,KAAK,CAACf,OAAO,IAAI,YAAY;MACpCP,OAAO,EAAEsB,KAAK,CAACqD,eAAe,IAAIrD,KAAK,CAACsD,OAAO,IAAI,sBAAsB;MACzE3E,OAAO,EAAE,IAAI,CAAC4E,eAAe,CAACvD,KAAK,CAAC;MACpChB,WAAW,EAAE,CAAC;QACZC,OAAO,EAAEe,KAAK,CAACf,OAAO;QACtBC,IAAI,EAAEc,KAAK,CAACd,IAAI;QAChBC,IAAI,EAAEa,KAAK,CAACb;MACd,CAAC,CAAC;MACF;MACA,GAAG,IAAI,CAACqE,sBAAsB,CAACxD,KAAK;IACtC,CAAC,CAAC,CAAC;EACL;;EAEA;EACAgD,cAAcA,CAAChD,KAAK,EAAE;IACpB,MAAMf,OAAO,GAAG,CAACe,KAAK,CAACf,OAAO,IAAI,EAAE,EAAEwE,WAAW,CAAC,CAAC;IACnD,MAAMvE,IAAI,GAAG,CAACc,KAAK,CAACd,IAAI,IAAI,EAAE,EAAEuE,WAAW,CAAC,CAAC;IAE7C,IAAIxE,OAAO,CAACyE,QAAQ,CAAC,YAAY,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,QAAQ,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC3F,OAAO,WAAW;IACpB;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,MAAM,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,OAAO,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,OAAO,CAAC,EAAE;MACnF,OAAO,cAAc;IACvB;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,QAAQ,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,UAAU,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC1F,OAAO,sBAAsB;IAC/B;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,MAAM,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,MAAM,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,OAAO,CAAC,EAAE;MAClF,OAAO,cAAc;IACvB;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,QAAQ,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,UAAU,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC3F,OAAO,eAAe;IACxB;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,UAAU,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,UAAU,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC7F,OAAO,kBAAkB;IAC3B;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,SAAS,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,WAAW,CAAC,IAAIxE,IAAI,CAACwE,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC3F,OAAO,qBAAqB;IAC9B;IAEA,OAAO,sBAAsB,CAAC,CAAC;EACjC;;EAEA;EACAT,iBAAiBA,CAACjD,KAAK,EAAE;IACvB,MAAMf,OAAO,GAAG,CAACe,KAAK,CAACf,OAAO,IAAI,EAAE,EAAEwE,WAAW,CAAC,CAAC;IACnD,MAAMH,OAAO,GAAG,CAACtD,KAAK,CAACsD,OAAO,IAAI,EAAE,EAAEG,WAAW,CAAC,CAAC;IAEnD,IAAIxE,OAAO,CAACyE,QAAQ,CAAC,QAAQ,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,MAAM,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC3F,OAAO,UAAU;IACnB;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,WAAW,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,KAAK,CAAC,IAAIJ,OAAO,CAACI,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC5F,OAAO,MAAM;IACf;IACA,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,KAAK,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,YAAY,CAAC,IAAIzE,OAAO,CAACyE,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC3F,OAAO,KAAK;IACd;IAEA,OAAO,QAAQ,CAAC,CAAC;EACnB;;EAEA;EACAR,WAAWA,CAAClD,KAAK,EAAE;IACjB,MAAM2D,SAAS,GAAG,IAAI,CAACX,cAAc,CAAChD,KAAK,CAAC;IAC5C,MAAM9B,QAAQ,GAAG,IAAI,CAAC+E,iBAAiB,CAACjD,KAAK,CAAC;IAE9C,IAAI9B,QAAQ,KAAK,UAAU,EAAE;MAC3B,QAAQyF,SAAS;QACf,KAAK,WAAW;UAAE,OAAO,aAAa;QACtC,KAAK,cAAc;UAAE,OAAO,eAAe;QAC3C,KAAK,sBAAsB;UAAE,OAAO,kBAAkB;QACtD,KAAK,kBAAkB;UAAE,OAAO,iBAAiB;QACjD;UAAS,OAAO,aAAa;MAC/B;IACF;IAEA,QAAQA,SAAS;MACf,KAAK,WAAW;QAAE,OAAO,aAAa;MACtC,KAAK,cAAc;QAAE,OAAO,cAAc;MAC1C,KAAK,sBAAsB;QAAE,OAAO,YAAY;MAChD,KAAK,cAAc;QAAE,OAAO,YAAY;MACxC,KAAK,eAAe;QAAE,OAAO,cAAc;MAC3C,KAAK,kBAAkB;QAAE,OAAO,iBAAiB;MACjD,KAAK,qBAAqB;QAAE,OAAO,iBAAiB;MACpD,KAAK,sBAAsB;QAAE,OAAO,gBAAgB;MACpD;QAAS,OAAO,QAAQ;IAC1B;EACF;;EAEA;EACAJ,eAAeA,CAACvD,KAAK,EAAE;IACrB,MAAM7B,GAAG,GAAG,IAAI,CAAC+E,WAAW,CAAClD,KAAK,CAAC;IACnC,MAAM2D,SAAS,GAAG,IAAI,CAACX,cAAc,CAAChD,KAAK,CAAC;IAE5C,IAAI2D,SAAS,KAAK,cAAc,IAAIA,SAAS,KAAK,eAAe,EAAE;MACjE,OAAO,gBAAgBxF,GAAG,EAAE;IAC9B;IAEA,OAAO,gBAAgBA,GAAG,EAAE;EAC9B;;EAEA;EACAqF,sBAAsBA,CAACxD,KAAK,EAAE;IAC5B,MAAM2D,SAAS,GAAG,IAAI,CAACX,cAAc,CAAChD,KAAK,CAAC;IAC5C,MAAM4D,MAAM,GAAG,CAAC,CAAC;;IAEjB;IACA;;IAEA,OAAOA,MAAM;EACf;;EAEA;EACAT,aAAaA,CAACC,YAAY,EAAE;IAC1B,IAAI,CAACA,YAAY,EAAE,OAAO,SAAS;IAEnC,MAAMS,SAAS,GAAG,IAAIC,IAAI,CAACC,QAAQ,CAACX,YAAY,CAAC,CAAC;IAClD,MAAMY,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;IACtB,MAAMG,MAAM,GAAGD,GAAG,GAAGH,SAAS;IAC9B,MAAMK,SAAS,GAAGrG,IAAI,CAACC,KAAK,CAACmG,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACvD,MAAME,QAAQ,GAAGtG,IAAI,CAACC,KAAK,CAACoG,SAAS,GAAG,EAAE,CAAC;IAE3C,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAO,UAAU;IACpC,IAAIA,SAAS,GAAG,EAAE,EAAE,OAAO,GAAGA,SAAS,OAAO;IAC9C,IAAIC,QAAQ,KAAK,CAAC,EAAE,OAAO,WAAW;IACtC,IAAIA,QAAQ,GAAG,CAAC,EAAE,OAAO,GAAGA,QAAQ,OAAO;IAC3C,OAAO,GAAGtG,IAAI,CAACC,KAAK,CAACqG,QAAQ,GAAG,CAAC,CAAC,OAAO;EAC3C;;EAEA;EACA,MAAMC,mBAAmBA,CAAC7E,SAAS,EAAE;IACnC,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAM,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAAC,cAAclB,SAAS,SAAS,CAAC;MAC3E,OAAOiB,QAAQ,CAACG,IAAI,CAAC0D,cAAc;IACrC,CAAC,CAAC,OAAOtD,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF;;EAEA;EACA,MAAMuD,oBAAoBA,CAAA,EAAG;IAC3B,IAAI;MACF;MACA;MACA,OAAO,CACL;QAAEtE,KAAK,EAAE,sBAAsB;QAAEuE,WAAW,EAAE;MAAgB,CAAC,EAC/D;QAAEvE,KAAK,EAAE,yBAAyB;QAAEuE,WAAW,EAAE;MAAkB,CAAC,CACrE;IACH,CAAC,CAAC,OAAOxD,KAAK,EAAE;MACd,OAAO,EAAE;IACX;EACF;;EAEA;EACA,MAAMyD,aAAaA,CAACjF,SAAS,EAAEkF,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI;MACF,MAAMjE,QAAQ,GAAG,MAAM,IAAI,CAAChB,SAAS,CAACkF,IAAI,CAAC,cAAcnF,SAAS,UAAU,EAAE;QAC5EoF,SAAS,EAAEF,OAAO,CAACE,SAAS,IAAI,EAAE;QAClCC,aAAa,EAAE,CAAC,MAAM,CAAC;QACvBC,sBAAsB,EAAE;MAC1B,CAAC,CAAC;MAEF,OAAOrE,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAI3B,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}